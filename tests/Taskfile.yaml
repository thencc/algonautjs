# unit testing tasks


# run from cli:
# 	task tests

# list tasks:
#   task --list

# envs + taskfile:
# https://taskfile.dev/usage/#env-files

# vscode ext (doesnt work well if yaml has comments...):
# allows for code completion + easy running of tasks from bottom left panel
# https://marketplace.visualstudio.com/items?itemName=paulvarache.vscode-taskfile


version: '3'
silent: true
output: prefixed

# env (use `tast --taskfile Taskfile.prod.yaml test` to use diff env)
dotenv: ['.env']

tasks:

  hello:
    desc: 'a little hello world task'
    cmds:
      - echo "hello tasker"
      - echo "env $NAME"

  prepare-tests:
    desc: 'install + link all test dirs'
    cmds:
      - find . -maxdepth 2 -name package.json -execdir npm i \;

  tests:
    desc: 'run all unit tests'
    # FYI deps run in parallel
    deps:
      - test:init-node-ts-cjs
      - test:init-node-ts-esm
      - test:init-node-js-cjs
      - test:init-node-js-esm
    cmds:
      - echo "all tests completed OK!"

  test:init-node-ts-cjs:
    dir: init-node-ts-cjs
    cmds:
      - npm run test
      - npm run build
      - npm run test-built

  test:init-node-ts-esm:
    dir: init-node-ts-esm
    cmds:
      # ts-node
      - npm run test
      # node
      - npm run build
      - npm run test-built

  test:init-node-js-cjs:
    dir: init-node-js-cjs
    cmds:
      # - npm run link
      - npm run test

  test:init-node-js-esm:
    dir: init-node-js-esm
    cmds:
      # - npm run link
      - npm run test



# :::GRAVEYARD:::

# 'test:ts-import':
#     cmds:
#       - echo "doing 'test:ts-import' "
#       # how to multi-line
#       - |
#         cd ./ts-import
#         npm run dev
